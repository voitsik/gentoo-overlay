diff --git a/jiveplot/jplotter.py b/jiveplot/jplotter.py
index 27c7247..1710876 100644
--- a/jiveplot/jplotter.py
+++ b/jiveplot/jplotter.py
@@ -399,7 +399,7 @@ import collections
 import copy
 import datetime
 import functools
-import imp
+import importlib
 import itertools
 import operator
 import os
@@ -1896,8 +1896,11 @@ class environment(object):
                         if os.path.isdir(m_path):
                             sys.path.insert(0, m_path)
 
-                    (f, p, d) = imp.find_module(m_name)
-                    mod = imp.load_module(m_name, f, p, d)
+                    spec = importlib.util.find_spec(m_name)
+                    if spec is None:
+                        raise ImportError("Module {0} not found".format(m_name))
+                    mod = importlib.util.module_from_spec(spec)
+                    spec.loader.exec_module(mod)
                     self.post_processing_fn  = mod.__dict__[m_fn]
                     self.post_processing_mod = args[0]
                 except ImportError:
diff --git a/jiveplot/plotiterator.py b/jiveplot/plotiterator.py
index f8e0e5c..2af7263 100644
--- a/jiveplot/plotiterator.py
+++ b/jiveplot/plotiterator.py
@@ -151,7 +151,7 @@ from __future__ import print_function
 
 import collections
 import copy
-import imp
+import importlib
 import itertools
 import operator
 import time
@@ -167,7 +167,7 @@ havePyCasa = True
 try:
     import pycasa
     print("*** using PyCasa for measurementset data access ***")
-except:
+except ImportError:
     havePyCasa = False
 
 ## Introduce some shorthands
@@ -1006,7 +1006,7 @@ class partitioner:
                 "ymax = None\n"+
                 "f   = lambda x, y: "+expr,
                 'dyn-mark-string', 'exec')
-        self.mod  = imp.new_module("dyn_marker_mod")
+        self.mod  = importlib.util.module_from_spec(importlib.util.spec_from_loader("dyn_marker_mod", loader=None))
         exec(self.code, self.mod.__dict__)
 
     def __call__(self, x, y):
